* Iptables - My Notes

** Introduction

iptables is a user space application program that allows a system administrator
to configure the tables provided by Xtables and the chains and rules it stores.
Because iptables requires elevated privileges to operate, it must be executed
by user root.

*** Operationall summary

The Xtables framework, used by ip_tables, ip6_tables, arp_tables, allow the system
adminsitrator to define tables containing chains of rules for the treatment of packets.
Each tables is associated with a different kind of packed processing. Packets are
processed by traversing the chains. A rule in a chain  can send a packed to another
chain, and this can be repeated to whatever level of nesting is desired. Every network
packet arriving at or leaving form the computer traverses at least one chain.

The source of the packed determines which chain it traverses initially. There are three
predefined chains (INPUT, OUTPUT and FORWARD) in the "filter" table.


*** Table Processing For Packets Routed By The Firewall

| QueueType | Queue Function   | Chain       |
|           |                  |             |
| FILTER    | Packet Filtering | FORWARD     |
|           |                  | INPUT       |
|           |                  | OUTPUT      |
|           |                  |             |
| NAT       | Network Address  | PREROUTING  |
|           | Translation      |             |
|           |                  |             |
|           |                  | POSTROUTING |
|           |                  |             |
|           |                  | OUTPUT      |
|           |                  |             |
| MAGLE     | TCP header       |             |
|           | modification     | PREROUTING  |
|           |                  | POSTROUTING |
|           |                  | OUTPUT      |
|           |                  | INPUT       |
|           |                  | FORWARD     |
|           |                  |             |


**** FILTER::FORWARD

     Filters packets to servers accessible by another NIC on the firewal


**** FILTER::INPUT

     Filter packets comming into the system

**** FILTER::OUTPUT

     Filter packets orginating from the system



**** NAT::PREROUTING

     Address translation occurs before routing. Facilitates the transformation of the destined IP
     address to be compatible with the systems routing table. Used with NAT of the destination IP
     address, also know as destination NAT or DNAT

**** NAT::POSTROUTING

     Address translation occurs after routing. This implies that there was no need to modify the
     detination IP address of the packet as in pre-routing. Used with NAT of the source IP address
     using either one-to-one or many-to-one NAT. This is know as source NAT, or SNAT

**** NAT::OUTPUT

     Network address translation for packets generated by the firewall.

**** MANGLE

     Modification of the TCP packet quality of service bits befor routing occurs















*** Notes from the tutorials

Packets passing through the firewall

from outside firewall destined to the machine passed to the input chain
from inside firewall destined to the outside passed throught the output chain
packets which are



*** snippets

     # Declare a new chain
     iptables -N SERVICES

     Now we have to decide where in the input chain we want to brach of to redirect the
     packet thorough the services chain

     iptables -A INPUT -j SERVICES

     whenever you jump to a custom chain, the packet will pass through the custom chain
     and will jump back


     iptables -A SERVICES -m iprange --src-range 192.168.1.1-192.168.1.254 -p tcp  --dport
     631 -j ACCEPT

     iptables -A SERVICES -m iprange --src-range 192.168.1.1-192.168.1.254 -p udp  --dport
     631 -j ACCEPT


     If you want to change packet data, and redirect it from one port to another we cant
     use the FILTER table, we are going to have have to use the NAT TABLE

     Once They pass throught the NAT table they will pass through the FORWARD chain, because
     the packets are now considered to be  routed, and then the INPUT chain


     we have to set the default targets on the three chains on the NAT table,
     they are OUTPUT, PREROUTING AND POSTROUTING

     $ iptables -t nat -P OUTPUT ACCEPT
     $ iptables -t nat -P PREROUTING ACCEPT
     $ iptables -t nat -P POSTROUTING ACCEPT


     redirect 80 to 8080

     iptables -t nat -A PRETROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080

     iptables -A FORWARD -p tcp --dport 631 -j ACCEPT



     raw -> mangle -> nat -> routing -> mangle input -> filter input




** References

   http://iptables-tutorial.frozentux.net/iptables-tutorial.html

   http://www.iptablesrocks.org/

   http://een.wikipedia.org/wiki/iptables

   http://www.linuxhomenetworking.com/wiki/index.php/Quick_HOWTO_:_Ch14_:_Linux_Firewalls_Using_iptables







** Specific command for specific

*** task: to redirect packets from the current machine (10.0.0.2) to 61.11.90.161 to be redirected to 61.11.90.161

    iptables -t nat -A OUTPUT -p tcp -d 61.11.90.161 --dport 80 -j DNAT --to 10.0.0.2:80

    note we are using nat table and we are appending to OUTPUT chain





*** Configuring NAT on vmware

echo 1 > /proc/sys/net/ipv4/ip_forward

iptables -t nat --append POSTROUTING -j MASQUERADE

iptables --append FORWARD --in-interface vmnet8 -j ACCEPT
